Post:
  tags:
    - 'posts'
  summary: 새로운 게시글을 등록합니다.
  security:
    - BearerAuth: [ ]
  description: |
    # 게시글 업로드 API
    새로운 게시글을 등록합니다.
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../components/requestBody/post.yaml#/post'
        examples:
          $ref: '../components/examples/post.yaml#/postRequestBody'
  responses:
    '201':
      description: OK
      content:
        application/json:
          schema:
            $ref: '../components/responses/post.yaml#/post'
          examples:
            $ref: '../components/examples/post.yaml#/post'
Get:
  tags:
    - 'posts'
  summary: 게시글 목록을 가져옵니다.
  security:
    - BearerAuth: [ ]
  description: |
    # 게시글 목록 API
    게시글 목록을 반환합니다.
  parameters:
    - name: "page"
      in: query
      schema:
        type: integer
      description: 페이지 넘버
    - name: "limit"
      in: query
      schema:
        type: integer
      description: 한 페이지에 표시할 게시글 수
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            $ref: '../components/responses/post.yaml#/get'
          examples:
            $ref: '../components/examples/post.yaml#/get'
GetByPostId:
  tags:
    - 'posts'
  summary: 게시글 정보를 가져옵니다.
  security:
    - BearerAuth: [ ]
  description: |
    # 게시글 정보 열람 API
    게시글 1개의 정보를 반환합니다.
  parameters:
    - name: "postId"
      in: path
      description: postId
      required: true
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            $ref: '../components/responses/post.yaml#/getOne'
          examples:
            $ref: '../components/examples/post.yaml#/getOne'
Put:
  tags:
    - 'posts'
  summary: 게시글 정보를 수정합니다.
  security:
    - BearerAuth: [ ]
  description: |
    # 게시글 수정 API
    게시글을 수정합니다.
  parameters:
    - name: "postId"
      in: path
      description: postId
      required: true
  requestBody:
    content:
      application/json:
        schema:
          $ref: '../components/requestBody/post.yaml#/put'
        examples:
          $ref: '../components/examples/post.yaml#/putRequestBody'
  responses:
    '201':
      description: OK
      content:
        application/json:
          schema:
            $ref: '../components/responses/post.yaml#/put'
          examples:
            $ref: '../components/examples/post.yaml#/put'
Delete:
  tags:
    - 'posts'
  summary: 게시글을 삭제합니다.
  security:
    - BearerAuth: [ ]
  description: |
    # 게시글 삭제 API
    게시글 1개를 삭제합니다.
  parameters:
    - name: "postId"
      in: path
      description: postId
      required: true
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: 요청이 성공했는지를 나타냅니다.
              message:
                type: string
                descipriton: 메시지
          examples:
            value:
              success: true
              message: 성공적으로 삭제되었습니다.
GetUsersPosts:
  tags:
    - 'posts'
  summary: 게시글 목록을 가져옵니다.
  security:
    - BearerAuth: [ ]
  description: |
    # 유저 게시글 목록 API
    로그인한 사용자의 게시글 목록을 반환합니다.
  parameters:
    - name: "page"
      in: query
      schema:
        type: integer
      description: 페이지 넘버
    - name: "limit"
      in: query
      schema:
        type: integer
      description: 한 페이지에 표시할 게시글 수
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            $ref: '../components/responses/post.yaml#/getUsers'
          examples:
            $ref: '../components/examples/post.yaml#/getUsers'
GetUsersPostsByUserId:
  tags:
    - 'posts'
  summary: 게시글 목록을 가져옵니다.
  security:
    - BearerAuth: [ ]
  description: |
    # 유저 게시글 목록 API
    로그인한 사용자의 게시글 목록을 반환합니다.
  parameters:
    - name: "userId"
      in: path
      schema:
        type: string
      description: userId
    - name: "page"
      in: query
      schema:
        type: integer
      description: 페이지 넘버
    - name: "limit"
      in: query
      schema:
        type: integer
      description: 한 페이지에 표시할 게시글 수
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            $ref: '../components/responses/post.yaml#/getUsersById'
          examples:
            $ref: '../components/examples/post.yaml#/getUsersById'